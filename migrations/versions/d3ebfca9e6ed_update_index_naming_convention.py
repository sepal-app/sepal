"""update index naming convention

Revision ID: d3ebfca9e6ed
Revises: b2aa0bf28abb
Create Date: 2022-12-24 08:10:37.489355

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d3ebfca9e6ed"
down_revision = "b2aa0bf28abb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("accession", schema=None) as batch_op:
        batch_op.drop_constraint("accession_organization_id_code_idx", type_="unique")
        batch_op.create_unique_constraint(
            batch_op.f("accession_organization_id_code_unq"),
            ["organization_id", "code"],
        )

    with op.batch_alter_table("accession_item", schema=None) as batch_op:
        batch_op.alter_column(
            "accession_id", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.drop_constraint(
            "accession_item_organization_id_accession_id_code_idx", type_="unique"
        )
        batch_op.create_unique_constraint(
            batch_op.f("accession_item_organization_id_accession_id_code_unq"),
            ["organization_id", "accession_id", "code"],
        )

    with op.batch_alter_table("location", schema=None) as batch_op:
        batch_op.alter_column("description", existing_type=sa.TEXT(), nullable=False)
        batch_op.drop_constraint("location_organization_id_code_idx", type_="unique")
        batch_op.drop_constraint("location_organization_id_name_idx", type_="unique")
        batch_op.create_unique_constraint(
            batch_op.f("location_organization_id_code_unq"), ["organization_id", "code"]
        )
        batch_op.create_unique_constraint(
            batch_op.f("location_organization_id_name_unq"), ["organization_id", "name"]
        )

    with op.batch_alter_table("organization", schema=None) as batch_op:
        batch_op.alter_column(
            "abbreviation",
            existing_type=sa.TEXT(),
            nullable=True,
            existing_server_default=sa.text("''::text"),
        )
        batch_op.alter_column(
            "short_name",
            existing_type=sa.TEXT(),
            nullable=True,
            existing_server_default=sa.text("''::text"),
        )

    with op.batch_alter_table("organization_user", schema=None) as batch_op:
        batch_op.drop_constraint(
            "organization_user_organization_id_user_id_role_idx", type_="unique"
        )
        batch_op.create_unique_constraint(
            batch_op.f("organization_user_organization_id_user_id_role_unq"),
            ["organization_id", "user_id", "role"],
        )

    with op.batch_alter_table("taxon", schema=None) as batch_op:
        batch_op.drop_constraint(
            "taxon_organization_id_name_author_rank_idx", type_="unique"
        )
        batch_op.create_unique_constraint(
            batch_op.f("taxon_organization_id_name_author_rank_unq"),
            ["organization_id", "name", "author", "rank"],
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("taxon", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("taxon_organization_id_name_author_rank_unq"), type_="unique"
        )
        batch_op.create_unique_constraint(
            "taxon_organization_id_name_author_rank_idx",
            ["organization_id", "name", "author", "rank"],
        )

    with op.batch_alter_table("organization_user", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("organization_user_organization_id_user_id_role_unq"),
            type_="unique",
        )
        batch_op.create_unique_constraint(
            "organization_user_organization_id_user_id_role_idx",
            ["organization_id", "user_id", "role"],
        )

    with op.batch_alter_table("organization", schema=None) as batch_op:
        batch_op.alter_column(
            "short_name",
            existing_type=sa.TEXT(),
            nullable=False,
            existing_server_default=sa.text("''::text"),
        )
        batch_op.alter_column(
            "abbreviation",
            existing_type=sa.TEXT(),
            nullable=False,
            existing_server_default=sa.text("''::text"),
        )

    with op.batch_alter_table("location", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("location_organization_id_name_unq"), type_="unique"
        )
        batch_op.drop_constraint(
            batch_op.f("location_organization_id_code_unq"), type_="unique"
        )
        batch_op.create_unique_constraint(
            "location_organization_id_name_idx", ["organization_id", "name"]
        )
        batch_op.create_unique_constraint(
            "location_organization_id_code_idx", ["organization_id", "code"]
        )
        batch_op.alter_column("description", existing_type=sa.TEXT(), nullable=True)

    with op.batch_alter_table("accession_item", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("accession_item_organization_id_accession_id_code_unq"),
            type_="unique",
        )
        batch_op.create_unique_constraint(
            "accession_item_organization_id_accession_id_code_idx",
            ["organization_id", "accession_id", "code"],
        )
        batch_op.alter_column("accession_id", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("accession", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("accession_organization_id_code_unq"), type_="unique"
        )
        batch_op.create_unique_constraint(
            "accession_organization_id_code_idx", ["organization_id", "code"]
        )

    # ### end Alembic commands ###
